{"id":220906836,"name":"Systems Support for High-Performance Scientific Data Mining","abstraction":"With recent technological advances, shared memory parallel machines have become more scalable, and offer large main memories and high bus bandwidths. They are emerging as good platforms for data warehousing and data mining. In this paper, we focus on shared memory parallelization of data mining algorithms. We have developed a series of techniques for parallelization of data mining algorithms, including full replication, full locking, fixed locking, optimized full locking, and cache-sensitive locking. Unlike previous work on shared memory parallelization of specific data mining algorithms, all of our techniques apply to a large number of popular data mining algorithms. In addition, we propose a reduction-object-based interface for specifying a data mining algorithm. We show how our runtime system can apply any of the techniques we have developed starting from a common specification of the algorithm. We have carried out a detailed evaluation of the parallelization techniques and the programming interface. We have experimented with apriori and fp-tree-based association mining, k-means clustering, k-nearest neighbor classifier, and decision tree construction. The main results from our experiments are as follows. 1) Among full replication, optimized full locking, and cache- sensitive locking, there is no clear winner. Each of these three techniques can outperform others depending upon machine and dataset parameters. These three techniques perform significantly better than the other two techniques. 2) Good parallel efficiency is achieved for each of the four algorithms we experimented with, using our techniques and runtime system. 3) The overhead of the interface is within 10 percent in almost all cases. 4) In the case of decision tree construction, combining different techniques turned out to be crucial for achieving high performance.","authors":["Ruoming Jin"],"citedInUrls":["https://www.researchgate.net/publication/228948011_Systems_Support_for_High-Performance_Scientific_Data_Mining","https://www.researchgate.net/publication/253748872_Runtime_Support_for_Parallelizing_Data-Intensive_Applications_on_Cluster_of_Multi-Cores","https://www.researchgate.net/publication/228569445_Combining_distributed_memory_and_shared_memory_parallelization_for_data_mining_algorithms"],"refrenceUrls":["https://www.researchgate.net/publication/2600101_High_Performance_Data_Mining","https://www.researchgate.net/publication/220520134_Distributed_data_clustering_can_be_efficient_and_exact_ACM_SIGKDD_Explor_Newslett_234-38","https://www.researchgate.net/publication/2460285_SPRINT_A_scalable_parallel_classifier_for_data_mining","https://www.researchgate.net/publication/3420301_Parallel_and_distributed_association_mining_a_survey_IEEE_Concurrency_714-25","https://www.researchgate.net/publication/220427941_Strategies_for_parallel_data_mining","https://www.researchgate.net/publication/2460430_Fast_Algorithms_for_Mining_Association_Rules","https://www.researchgate.net/publication/24290605_Run-time_parallelization_and_scheduling_of_loops","https://www.researchgate.net/publication/2630657_A_Compiler_Method_for_the_Parallel_Execution_of_Irregular_Reductions_in_Scalable_Shared_Memory_Multiprocessors","https://www.researchgate.net/publication/263842523_Data_Mining_Concepts_and_Technique","https://www.researchgate.net/publication/2931349_Compiler_and_Runtime_Support_for_Shared_Memory_Parallelization_of_Data_Mining_Algorithms"],"citedInIDs":[228948011,253748872,228569445],"refrenceIDs":[2600101,220520134,2460285,3420301,220427941,2460430,24290605,2630657,263842523,2931349],"pageRank":7.568859943212781E-4}
